(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{357:function(n,t,s){"use strict";s.r(t);var r=s(17),e=Object(r.a)({},(function(){var n=this,t=n._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"字形变换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字形变换"}},[n._v("#")]),n._v(" 字形变换")]),n._v(" "),t("p",[t("a",{attrs:{href:"https://leetcode.cn/problems/zigzag-conversion/description/?envType=study-plan-v2&envId=top-interview-150",target:"_blank",rel:"noopener noreferrer"}},[n._v("原题链接"),t("OutboundLink")],1),n._v('\n将一个给定字符串 s 根据给定的行数 numRows ，以从上往下、从左到右进行 Z 字形排列。\n比如输入字符串为 "PAYPALISHIRING" 行数为 3 时，排列如下：')]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("P   A   H   N\nA P L S I I G\nY   I   R\n")])])]),t("p",[n._v('之后，你的输出需要从左往右逐行读取，产生出一个新的字符串，比如："PAHNAPLSIIGYIR"。\n请你实现这个将字符串进行指定行数变换的函数：\nstring convert(string s, int numRows);')]),n._v(" "),t("blockquote",[t("p",[n._v('示例 1：\n输入：s = "PAYPALISHIRING", numRows = 3\n输出："PAHNAPLSIIGYIR"')])]),n._v(" "),t("blockquote",[t("p",[n._v('示例 2：\n输入：s = "PAYPALISHIRING", numRows = 4\n输出："PINALSIGYAHRPI"\n解释：\nP     I    N\nA   L S  I G\nY A   H R\nP     I')])]),n._v(" "),t("blockquote",[t("p",[n._v('示例 3：\n输入：s = "A", numRows = 1\n输出："A"')])]),n._v(" "),t("p",[n._v("提示：")]),n._v(" "),t("ul",[t("li",[n._v("1 <= s.length <= 1000")]),n._v(" "),t("li",[n._v("s 由英文字母（小写和大写）、',' 和 '.' 组成")]),n._v(" "),t("li",[n._v("1 <= numRows <= 1000")])]),n._v(" "),t("h2",{attrs:{id:"题解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#题解"}},[n._v("#")]),n._v(" 题解")]),n._v(" "),t("blockquote",[t("p",[n._v("模拟。 每一周期使用的字符数为(2 * numRows- 2), 在一个周期内小于前 numRows - 1, 方向向下，反之右上。")])]),n._v(" "),t("div",{staticClass:"language-c++ extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("class Solution {\npublic:\n    string convert(string s, int numRows) {\n        int n = s.size(), r = numRows;\n        if (r == 1 || r >= n) {\n            return s;\n        }\n        vector<string> mat(r);\n        for (int i =0, x = 0, t = r * 2 -2; i < n; i++) {\n            mat[x] += s[i];\n            i % t < r - 1 ? ++x : --x;\n        }\n        string ans;\n        for (auto ch : mat) {\n            ans += ch;\n        }\n        return ans;\n    }\n};\n")])])]),t("blockquote",[t("p",[n._v("找规律。在一个周期内对于 0 和 i-1行只有一个元素，其它的有两个元素。")])]),n._v(" "),t("div",{staticClass:"language-c++ extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("class Solution {\npublic:\n    string convert(string s, int numRows) {\n        int n = s.size(), r = numRows;\n        if (r == 1 || r >= n) {\n            return s;\n        }\n        string ans;\n        int t = 2 * r - 2;\n        for (int i = 0; i < r; i++) {\n            for (int j = 0; j + i < n; j += t) {\n                ans += s[i+j];\n                if (0 < i && i < r - 1 && j + t - i < n) {\n                    ans += s[j + t -i];\n                }\n            }\n        }\n        return ans;\n    }\n};\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);