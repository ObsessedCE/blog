(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{353:function(n,t,s){"use strict";s.r(t);var i=s(17),e=Object(i.a)({},(function(){var n=this,t=n._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"加油站"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#加油站"}},[n._v("#")]),n._v(" 加油站")]),n._v(" "),t("p",[t("a",{attrs:{href:"https://leetcode.cn/problems/gas-station/description/?envType=study-plan-v2&envId=top-interview-150",target:"_blank",rel:"noopener noreferrer"}},[n._v("原题链接"),t("OutboundLink")],1),n._v("\n在一条环路上有 n 个加油站，其中第 i 个加油站有汽油 gas[i] 升。\n你有一辆油箱容量无限的的汽车，从第 i 个加油站开往第 i+1 个加油站需要消耗汽油 cost[i] 升。你从其中的一个加油站出发，开始时油箱为空。\n给定两个整数数组 gas 和 cost ，如果你可以按顺序绕环路行驶一周，则返回出发时加油站的编号，否则返回 -1 。如果存在解，则 保证 它是 唯一 的。")]),n._v(" "),t("blockquote",[t("p",[n._v("示例 1:")])]),n._v(" "),t("p",[n._v("输入: gas = [1,2,3,4,5], cost = [3,4,5,1,2]\n输出: 3\n解释:\n从 3 号加油站(索引为 3 处)出发，可获得 4 升汽油。此时油箱有 = 0 + 4 = 4 升汽油\n开往 4 号加油站，此时油箱有 4 - 1 + 5 = 8 升汽油\n开往 0 号加油站，此时油箱有 8 - 2 + 1 = 7 升汽油\n开往 1 号加油站，此时油箱有 7 - 3 + 2 = 6 升汽油\n开往 2 号加油站，此时油箱有 6 - 4 + 3 = 5 升汽油\n开往 3 号加油站，你需要消耗 5 升汽油，正好足够你返回到 3 号加油站。\n因此，3 可为起始索引。")]),n._v(" "),t("blockquote",[t("p",[n._v("示例 2:")])]),n._v(" "),t("p",[n._v("输入: gas = [2,3,4], cost = [3,4,3]\n输出: -1\n解释:\n你不能从 0 号或 1 号加油站出发，因为没有足够的汽油可以让你行驶到下一个加油站。\n我们从 2 号加油站出发，可以获得 4 升汽油。 此时油箱有 = 0 + 4 = 4 升汽油\n开往 0 号加油站，此时油箱有 4 - 3 + 2 = 3 升汽油\n开往 1 号加油站，此时油箱有 3 - 3 + 3 = 3 升汽油\n你无法返回 2 号加油站，因为返程需要消耗 4 升汽油，但是你的油箱只有 3 升汽油。\n因此，无论怎样，你都不可能绕环路行驶一周。")]),n._v(" "),t("p",[n._v("提示:")]),n._v(" "),t("ul",[t("li",[n._v("gas.length == n")]),n._v(" "),t("li",[n._v("cost.length == n")]),n._v(" "),t("li",[n._v("1 <= n <= 105")]),n._v(" "),t("li",[n._v("0 <= gas[i], cost[i] <= 104")])]),n._v(" "),t("h2",{attrs:{id:"题解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#题解"}},[n._v("#")]),n._v(" 题解")]),n._v(" "),t("blockquote",[t("p",[n._v("贪心算法。SumCost <= SumGas说明有解。有解情况下，遍历发现剩余油<0说明，更换新的起始点。")])]),n._v(" "),t("div",{staticClass:"language-c++ extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("class Solution {\npublic:\n    int canCompleteCircuit(vector<int>& gas, vector<int>& cost) {\n        int tmp  = 0;\n        int n = gas.size();\n        int pos = 0;\n        for (int i = 0; i < n;i++) {\n            gas[i] -= cost[i];\n            tmp += gas[i];\n        }\n        if (tmp < 0) {\n            return -1;\n        }\n        int res = 0;\n        // 之前指定起点到达此处剩余汽油\n        int cnt = 0;\n        for (int i = 0; i < n; i++) {\n            cnt +=  gas[i];\n            if (cnt < 0) {\n                res = i + 1;\n                cnt = 0;\n            }\n        }\n        return res;\n    }\n};\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);